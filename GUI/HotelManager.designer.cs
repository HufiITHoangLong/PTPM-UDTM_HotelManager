#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GUI
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Hotel_Manager")]
	public partial class HotelManagerDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPHONG(PHONG instance);
    partial void UpdatePHONG(PHONG instance);
    partial void DeletePHONG(PHONG instance);
    partial void InsertDICHVU(DICHVU instance);
    partial void UpdateDICHVU(DICHVU instance);
    partial void DeleteDICHVU(DICHVU instance);
    partial void InsertLOAIPHONG(LOAIPHONG instance);
    partial void UpdateLOAIPHONG(LOAIPHONG instance);
    partial void DeleteLOAIPHONG(LOAIPHONG instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertHOADONPH(HOADONPH instance);
    partial void UpdateHOADONPH(HOADONPH instance);
    partial void DeleteHOADONPH(HOADONPH instance);
    partial void InsertCHITIETHD(CHITIETHD instance);
    partial void UpdateCHITIETHD(CHITIETHD instance);
    partial void DeleteCHITIETHD(CHITIETHD instance);
    #endregion
		
		public HotelManagerDataContext() : 
				base(global::GUI.Properties.Settings.Default.Hotel_ManagerConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public HotelManagerDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HotelManagerDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HotelManagerDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HotelManagerDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PHONG> PHONGs
		{
			get
			{
				return this.GetTable<PHONG>();
			}
		}
		
		public System.Data.Linq.Table<DICHVU> DICHVUs
		{
			get
			{
				return this.GetTable<DICHVU>();
			}
		}
		
		public System.Data.Linq.Table<LOAIPHONG> LOAIPHONGs
		{
			get
			{
				return this.GetTable<LOAIPHONG>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<HOADONPH> HOADONPHs
		{
			get
			{
				return this.GetTable<HOADONPH>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETHD> CHITIETHDs
		{
			get
			{
				return this.GetTable<CHITIETHD>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHONG")]
	public partial class PHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPHONG;
		
		private System.Nullable<int> _TRANGTHAI;
		
		private System.Nullable<int> _SUCCHUA;
		
		private System.Nullable<int> _MALOAIPHONG;
		
		private EntitySet<HOADONPH> _HOADONPHs;
		
		private EntitySet<CHITIETHD> _CHITIETHDs;
		
		private EntityRef<LOAIPHONG> _LOAIPHONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHONGChanging(string value);
    partial void OnMAPHONGChanged();
    partial void OnTRANGTHAIChanging(System.Nullable<int> value);
    partial void OnTRANGTHAIChanged();
    partial void OnSUCCHUAChanging(System.Nullable<int> value);
    partial void OnSUCCHUAChanged();
    partial void OnMALOAIPHONGChanging(System.Nullable<int> value);
    partial void OnMALOAIPHONGChanged();
    #endregion
		
		public PHONG()
		{
			this._HOADONPHs = new EntitySet<HOADONPH>(new Action<HOADONPH>(this.attach_HOADONPHs), new Action<HOADONPH>(this.detach_HOADONPHs));
			this._CHITIETHDs = new EntitySet<CHITIETHD>(new Action<CHITIETHD>(this.attach_CHITIETHDs), new Action<CHITIETHD>(this.detach_CHITIETHDs));
			this._LOAIPHONG = default(EntityRef<LOAIPHONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHONG", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHONG
		{
			get
			{
				return this._MAPHONG;
			}
			set
			{
				if ((this._MAPHONG != value))
				{
					this.OnMAPHONGChanging(value);
					this.SendPropertyChanging();
					this._MAPHONG = value;
					this.SendPropertyChanged("MAPHONG");
					this.OnMAPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANGTHAI", DbType="Int")]
		public System.Nullable<int> TRANGTHAI
		{
			get
			{
				return this._TRANGTHAI;
			}
			set
			{
				if ((this._TRANGTHAI != value))
				{
					this.OnTRANGTHAIChanging(value);
					this.SendPropertyChanging();
					this._TRANGTHAI = value;
					this.SendPropertyChanged("TRANGTHAI");
					this.OnTRANGTHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUCCHUA", DbType="Int")]
		public System.Nullable<int> SUCCHUA
		{
			get
			{
				return this._SUCCHUA;
			}
			set
			{
				if ((this._SUCCHUA != value))
				{
					this.OnSUCCHUAChanging(value);
					this.SendPropertyChanging();
					this._SUCCHUA = value;
					this.SendPropertyChanged("SUCCHUA");
					this.OnSUCCHUAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAIPHONG", DbType="Int")]
		public System.Nullable<int> MALOAIPHONG
		{
			get
			{
				return this._MALOAIPHONG;
			}
			set
			{
				if ((this._MALOAIPHONG != value))
				{
					if (this._LOAIPHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOAIPHONGChanging(value);
					this.SendPropertyChanging();
					this._MALOAIPHONG = value;
					this.SendPropertyChanged("MALOAIPHONG");
					this.OnMALOAIPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_HOADONPH", Storage="_HOADONPHs", ThisKey="MAPHONG", OtherKey="MAPH")]
		public EntitySet<HOADONPH> HOADONPHs
		{
			get
			{
				return this._HOADONPHs;
			}
			set
			{
				this._HOADONPHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_CHITIETHD", Storage="_CHITIETHDs", ThisKey="MAPHONG", OtherKey="MAPH")]
		public EntitySet<CHITIETHD> CHITIETHDs
		{
			get
			{
				return this._CHITIETHDs;
			}
			set
			{
				this._CHITIETHDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIPHONG_PHONG", Storage="_LOAIPHONG", ThisKey="MALOAIPHONG", OtherKey="MALOAIPHONG", IsForeignKey=true)]
		public LOAIPHONG LOAIPHONG
		{
			get
			{
				return this._LOAIPHONG.Entity;
			}
			set
			{
				LOAIPHONG previousValue = this._LOAIPHONG.Entity;
				if (((previousValue != value) 
							|| (this._LOAIPHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAIPHONG.Entity = null;
						previousValue.PHONGs.Remove(this);
					}
					this._LOAIPHONG.Entity = value;
					if ((value != null))
					{
						value.PHONGs.Add(this);
						this._MALOAIPHONG = value.MALOAIPHONG;
					}
					else
					{
						this._MALOAIPHONG = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOAIPHONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOADONPHs(HOADONPH entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = this;
		}
		
		private void detach_HOADONPHs(HOADONPH entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = null;
		}
		
		private void attach_CHITIETHDs(CHITIETHD entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = this;
		}
		
		private void detach_CHITIETHDs(CHITIETHD entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DICHVU")]
	public partial class DICHVU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MADV;
		
		private string _TENDV;
		
		private System.Nullable<int> _DONGIA;
		
		private EntitySet<HOADONPH> _HOADONPHs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADVChanging(string value);
    partial void OnMADVChanged();
    partial void OnTENDVChanging(string value);
    partial void OnTENDVChanged();
    partial void OnDONGIAChanging(System.Nullable<int> value);
    partial void OnDONGIAChanged();
    #endregion
		
		public DICHVU()
		{
			this._HOADONPHs = new EntitySet<HOADONPH>(new Action<HOADONPH>(this.attach_HOADONPHs), new Action<HOADONPH>(this.detach_HOADONPHs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MADV
		{
			get
			{
				return this._MADV;
			}
			set
			{
				if ((this._MADV != value))
				{
					this.OnMADVChanging(value);
					this.SendPropertyChanging();
					this._MADV = value;
					this.SendPropertyChanged("MADV");
					this.OnMADVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENDV", DbType="NVarChar(50)")]
		public string TENDV
		{
			get
			{
				return this._TENDV;
			}
			set
			{
				if ((this._TENDV != value))
				{
					this.OnTENDVChanging(value);
					this.SendPropertyChanging();
					this._TENDV = value;
					this.SendPropertyChanged("TENDV");
					this.OnTENDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIA", DbType="Int")]
		public System.Nullable<int> DONGIA
		{
			get
			{
				return this._DONGIA;
			}
			set
			{
				if ((this._DONGIA != value))
				{
					this.OnDONGIAChanging(value);
					this.SendPropertyChanging();
					this._DONGIA = value;
					this.SendPropertyChanged("DONGIA");
					this.OnDONGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DICHVU_HOADONPH", Storage="_HOADONPHs", ThisKey="MADV", OtherKey="MADV")]
		public EntitySet<HOADONPH> HOADONPHs
		{
			get
			{
				return this._HOADONPHs;
			}
			set
			{
				this._HOADONPHs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOADONPHs(HOADONPH entity)
		{
			this.SendPropertyChanging();
			entity.DICHVU = this;
		}
		
		private void detach_HOADONPHs(HOADONPH entity)
		{
			this.SendPropertyChanging();
			entity.DICHVU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAIPHONG")]
	public partial class LOAIPHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MALOAIPHONG;
		
		private string _TENLOAIPHONG;
		
		private System.Nullable<int> _DONGIA;
		
		private System.Nullable<System.DateTime> _NGAYCAPNHAT;
		
		private string _NGUOICAPNHAT;
		
		private EntitySet<PHONG> _PHONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALOAIPHONGChanging(int value);
    partial void OnMALOAIPHONGChanged();
    partial void OnTENLOAIPHONGChanging(string value);
    partial void OnTENLOAIPHONGChanged();
    partial void OnDONGIAChanging(System.Nullable<int> value);
    partial void OnDONGIAChanged();
    partial void OnNGAYCAPNHATChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYCAPNHATChanged();
    partial void OnNGUOICAPNHATChanging(string value);
    partial void OnNGUOICAPNHATChanged();
    #endregion
		
		public LOAIPHONG()
		{
			this._PHONGs = new EntitySet<PHONG>(new Action<PHONG>(this.attach_PHONGs), new Action<PHONG>(this.detach_PHONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAIPHONG", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MALOAIPHONG
		{
			get
			{
				return this._MALOAIPHONG;
			}
			set
			{
				if ((this._MALOAIPHONG != value))
				{
					this.OnMALOAIPHONGChanging(value);
					this.SendPropertyChanging();
					this._MALOAIPHONG = value;
					this.SendPropertyChanged("MALOAIPHONG");
					this.OnMALOAIPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAIPHONG", DbType="NVarChar(30)")]
		public string TENLOAIPHONG
		{
			get
			{
				return this._TENLOAIPHONG;
			}
			set
			{
				if ((this._TENLOAIPHONG != value))
				{
					this.OnTENLOAIPHONGChanging(value);
					this.SendPropertyChanging();
					this._TENLOAIPHONG = value;
					this.SendPropertyChanged("TENLOAIPHONG");
					this.OnTENLOAIPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIA", DbType="Int")]
		public System.Nullable<int> DONGIA
		{
			get
			{
				return this._DONGIA;
			}
			set
			{
				if ((this._DONGIA != value))
				{
					this.OnDONGIAChanging(value);
					this.SendPropertyChanging();
					this._DONGIA = value;
					this.SendPropertyChanged("DONGIA");
					this.OnDONGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYCAPNHAT", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYCAPNHAT
		{
			get
			{
				return this._NGAYCAPNHAT;
			}
			set
			{
				if ((this._NGAYCAPNHAT != value))
				{
					this.OnNGAYCAPNHATChanging(value);
					this.SendPropertyChanging();
					this._NGAYCAPNHAT = value;
					this.SendPropertyChanged("NGAYCAPNHAT");
					this.OnNGAYCAPNHATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGUOICAPNHAT", DbType="VarChar(20)")]
		public string NGUOICAPNHAT
		{
			get
			{
				return this._NGUOICAPNHAT;
			}
			set
			{
				if ((this._NGUOICAPNHAT != value))
				{
					this.OnNGUOICAPNHATChanging(value);
					this.SendPropertyChanging();
					this._NGUOICAPNHAT = value;
					this.SendPropertyChanged("NGUOICAPNHAT");
					this.OnNGUOICAPNHATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIPHONG_PHONG", Storage="_PHONGs", ThisKey="MALOAIPHONG", OtherKey="MALOAIPHONG")]
		public EntitySet<PHONG> PHONGs
		{
			get
			{
				return this._PHONGs;
			}
			set
			{
				this._PHONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHONGs(PHONG entity)
		{
			this.SendPropertyChanging();
			entity.LOAIPHONG = this;
		}
		
		private void detach_PHONGs(PHONG entity)
		{
			this.SendPropertyChanging();
			entity.LOAIPHONG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _USERNAME;
		
		private string _PASSWORD;
		
		private string _HOTENNV;
		
		private string _DIENTHOAI;
		
		private string _DIACHI;
		
		private string _QUYEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUSERNAMEChanging(string value);
    partial void OnUSERNAMEChanged();
    partial void OnPASSWORDChanging(string value);
    partial void OnPASSWORDChanged();
    partial void OnHOTENNVChanging(string value);
    partial void OnHOTENNVChanged();
    partial void OnDIENTHOAIChanging(string value);
    partial void OnDIENTHOAIChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnQUYENChanging(string value);
    partial void OnQUYENChanged();
    #endregion
		
		public NHANVIEN()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERNAME", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string USERNAME
		{
			get
			{
				return this._USERNAME;
			}
			set
			{
				if ((this._USERNAME != value))
				{
					this.OnUSERNAMEChanging(value);
					this.SendPropertyChanging();
					this._USERNAME = value;
					this.SendPropertyChanged("USERNAME");
					this.OnUSERNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSWORD", DbType="VarChar(20)")]
		public string PASSWORD
		{
			get
			{
				return this._PASSWORD;
			}
			set
			{
				if ((this._PASSWORD != value))
				{
					this.OnPASSWORDChanging(value);
					this.SendPropertyChanging();
					this._PASSWORD = value;
					this.SendPropertyChanged("PASSWORD");
					this.OnPASSWORDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTENNV", DbType="NVarChar(50)")]
		public string HOTENNV
		{
			get
			{
				return this._HOTENNV;
			}
			set
			{
				if ((this._HOTENNV != value))
				{
					this.OnHOTENNVChanging(value);
					this.SendPropertyChanging();
					this._HOTENNV = value;
					this.SendPropertyChanged("HOTENNV");
					this.OnHOTENNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIENTHOAI", DbType="Char(11)")]
		public string DIENTHOAI
		{
			get
			{
				return this._DIENTHOAI;
			}
			set
			{
				if ((this._DIENTHOAI != value))
				{
					this.OnDIENTHOAIChanging(value);
					this.SendPropertyChanging();
					this._DIENTHOAI = value;
					this.SendPropertyChanged("DIENTHOAI");
					this.OnDIENTHOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(30)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUYEN", DbType="VarChar(10)")]
		public string QUYEN
		{
			get
			{
				return this._QUYEN;
			}
			set
			{
				if ((this._QUYEN != value))
				{
					this.OnQUYENChanging(value);
					this.SendPropertyChanging();
					this._QUYEN = value;
					this.SendPropertyChanged("QUYEN");
					this.OnQUYENChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAKH;
		
		private string _TENKH;
		
		private string _CMND;
		
		private string _GIOITINH;
		
		private string _DTHOAI;
		
		private string _DCHI;
		
		private EntitySet<HOADONPH> _HOADONPHs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHChanging(string value);
    partial void OnMAKHChanged();
    partial void OnTENKHChanging(string value);
    partial void OnTENKHChanged();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    partial void OnGIOITINHChanging(string value);
    partial void OnGIOITINHChanged();
    partial void OnDTHOAIChanging(string value);
    partial void OnDTHOAIChanged();
    partial void OnDCHIChanging(string value);
    partial void OnDCHIChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._HOADONPHs = new EntitySet<HOADONPH>(new Action<HOADONPH>(this.attach_HOADONPHs), new Action<HOADONPH>(this.detach_HOADONPHs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKH", DbType="NVarChar(50)")]
		public string TENKH
		{
			get
			{
				return this._TENKH;
			}
			set
			{
				if ((this._TENKH != value))
				{
					this.OnTENKHChanging(value);
					this.SendPropertyChanging();
					this._TENKH = value;
					this.SendPropertyChanged("TENKH");
					this.OnTENKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="Char(14)")]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOITINH", DbType="NVarChar(6)")]
		public string GIOITINH
		{
			get
			{
				return this._GIOITINH;
			}
			set
			{
				if ((this._GIOITINH != value))
				{
					this.OnGIOITINHChanging(value);
					this.SendPropertyChanging();
					this._GIOITINH = value;
					this.SendPropertyChanged("GIOITINH");
					this.OnGIOITINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTHOAI", DbType="Char(10)")]
		public string DTHOAI
		{
			get
			{
				return this._DTHOAI;
			}
			set
			{
				if ((this._DTHOAI != value))
				{
					this.OnDTHOAIChanging(value);
					this.SendPropertyChanging();
					this._DTHOAI = value;
					this.SendPropertyChanged("DTHOAI");
					this.OnDTHOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCHI", DbType="NVarChar(50)")]
		public string DCHI
		{
			get
			{
				return this._DCHI;
			}
			set
			{
				if ((this._DCHI != value))
				{
					this.OnDCHIChanging(value);
					this.SendPropertyChanging();
					this._DCHI = value;
					this.SendPropertyChanged("DCHI");
					this.OnDCHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADONPH", Storage="_HOADONPHs", ThisKey="MAKH", OtherKey="MAKH")]
		public EntitySet<HOADONPH> HOADONPHs
		{
			get
			{
				return this._HOADONPHs;
			}
			set
			{
				this._HOADONPHs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOADONPHs(HOADONPH entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_HOADONPHs(HOADONPH entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOADONPH")]
	public partial class HOADONPH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAHD;
		
		private string _MAKH;
		
		private string _MADV;
		
		private System.Nullable<int> _SOLUONGDV;
		
		private System.Nullable<int> _DONGIADV;
		
		private string _MAPH;
		
		private System.Nullable<int> _DONGIAP;
		
		private System.Nullable<System.DateTime> _NGAYVAO;
		
		private System.Nullable<System.DateTime> _NGAYRA;
		
		private EntityRef<CHITIETHD> _CHITIETHD;
		
		private EntityRef<DICHVU> _DICHVU;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<PHONG> _PHONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHDChanging(string value);
    partial void OnMAHDChanged();
    partial void OnMAKHChanging(string value);
    partial void OnMAKHChanged();
    partial void OnMADVChanging(string value);
    partial void OnMADVChanged();
    partial void OnSOLUONGDVChanging(System.Nullable<int> value);
    partial void OnSOLUONGDVChanged();
    partial void OnDONGIADVChanging(System.Nullable<int> value);
    partial void OnDONGIADVChanged();
    partial void OnMAPHChanging(string value);
    partial void OnMAPHChanged();
    partial void OnDONGIAPChanging(System.Nullable<int> value);
    partial void OnDONGIAPChanged();
    partial void OnNGAYVAOChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYVAOChanged();
    partial void OnNGAYRAChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYRAChanged();
    #endregion
		
		public HOADONPH()
		{
			this._CHITIETHD = default(EntityRef<CHITIETHD>);
			this._DICHVU = default(EntityRef<DICHVU>);
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._PHONG = default(EntityRef<PHONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHD", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHD
		{
			get
			{
				return this._MAHD;
			}
			set
			{
				if ((this._MAHD != value))
				{
					this.OnMAHDChanging(value);
					this.SendPropertyChanging();
					this._MAHD = value;
					this.SendPropertyChanged("MAHD");
					this.OnMAHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="Char(10)")]
		public string MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADV", DbType="Char(10)")]
		public string MADV
		{
			get
			{
				return this._MADV;
			}
			set
			{
				if ((this._MADV != value))
				{
					if (this._DICHVU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMADVChanging(value);
					this.SendPropertyChanging();
					this._MADV = value;
					this.SendPropertyChanged("MADV");
					this.OnMADVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONGDV", DbType="Int")]
		public System.Nullable<int> SOLUONGDV
		{
			get
			{
				return this._SOLUONGDV;
			}
			set
			{
				if ((this._SOLUONGDV != value))
				{
					this.OnSOLUONGDVChanging(value);
					this.SendPropertyChanging();
					this._SOLUONGDV = value;
					this.SendPropertyChanged("SOLUONGDV");
					this.OnSOLUONGDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIADV", DbType="Int")]
		public System.Nullable<int> DONGIADV
		{
			get
			{
				return this._DONGIADV;
			}
			set
			{
				if ((this._DONGIADV != value))
				{
					this.OnDONGIADVChanging(value);
					this.SendPropertyChanging();
					this._DONGIADV = value;
					this.SendPropertyChanged("DONGIADV");
					this.OnDONGIADVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPH", DbType="Char(10)")]
		public string MAPH
		{
			get
			{
				return this._MAPH;
			}
			set
			{
				if ((this._MAPH != value))
				{
					if (this._PHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHChanging(value);
					this.SendPropertyChanging();
					this._MAPH = value;
					this.SendPropertyChanged("MAPH");
					this.OnMAPHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIAP", DbType="Int")]
		public System.Nullable<int> DONGIAP
		{
			get
			{
				return this._DONGIAP;
			}
			set
			{
				if ((this._DONGIAP != value))
				{
					this.OnDONGIAPChanging(value);
					this.SendPropertyChanging();
					this._DONGIAP = value;
					this.SendPropertyChanged("DONGIAP");
					this.OnDONGIAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYVAO", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYVAO
		{
			get
			{
				return this._NGAYVAO;
			}
			set
			{
				if ((this._NGAYVAO != value))
				{
					this.OnNGAYVAOChanging(value);
					this.SendPropertyChanging();
					this._NGAYVAO = value;
					this.SendPropertyChanged("NGAYVAO");
					this.OnNGAYVAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYRA", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYRA
		{
			get
			{
				return this._NGAYRA;
			}
			set
			{
				if ((this._NGAYRA != value))
				{
					this.OnNGAYRAChanging(value);
					this.SendPropertyChanging();
					this._NGAYRA = value;
					this.SendPropertyChanged("NGAYRA");
					this.OnNGAYRAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADONPH_CHITIETHD", Storage="_CHITIETHD", ThisKey="MAHD", OtherKey="MAHD", IsUnique=true, IsForeignKey=false)]
		public CHITIETHD CHITIETHD
		{
			get
			{
				return this._CHITIETHD.Entity;
			}
			set
			{
				CHITIETHD previousValue = this._CHITIETHD.Entity;
				if (((previousValue != value) 
							|| (this._CHITIETHD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHITIETHD.Entity = null;
						previousValue.HOADONPH = null;
					}
					this._CHITIETHD.Entity = value;
					if ((value != null))
					{
						value.HOADONPH = this;
					}
					this.SendPropertyChanged("CHITIETHD");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DICHVU_HOADONPH", Storage="_DICHVU", ThisKey="MADV", OtherKey="MADV", IsForeignKey=true)]
		public DICHVU DICHVU
		{
			get
			{
				return this._DICHVU.Entity;
			}
			set
			{
				DICHVU previousValue = this._DICHVU.Entity;
				if (((previousValue != value) 
							|| (this._DICHVU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DICHVU.Entity = null;
						previousValue.HOADONPHs.Remove(this);
					}
					this._DICHVU.Entity = value;
					if ((value != null))
					{
						value.HOADONPHs.Add(this);
						this._MADV = value.MADV;
					}
					else
					{
						this._MADV = default(string);
					}
					this.SendPropertyChanged("DICHVU");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADONPH", Storage="_KHACHHANG", ThisKey="MAKH", OtherKey="MAKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.HOADONPHs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.HOADONPHs.Add(this);
						this._MAKH = value.MAKH;
					}
					else
					{
						this._MAKH = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_HOADONPH", Storage="_PHONG", ThisKey="MAPH", OtherKey="MAPHONG", IsForeignKey=true)]
		public PHONG PHONG
		{
			get
			{
				return this._PHONG.Entity;
			}
			set
			{
				PHONG previousValue = this._PHONG.Entity;
				if (((previousValue != value) 
							|| (this._PHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONG.Entity = null;
						previousValue.HOADONPHs.Remove(this);
					}
					this._PHONG.Entity = value;
					if ((value != null))
					{
						value.HOADONPHs.Add(this);
						this._MAPH = value.MAPHONG;
					}
					else
					{
						this._MAPH = default(string);
					}
					this.SendPropertyChanged("PHONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETHD")]
	public partial class CHITIETHD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAHD;
		
		private string _MAPH;
		
		private string _TENKH;
		
		private System.Nullable<int> _TONGTIENDV;
		
		private System.Nullable<int> _TONGTIENPHONG;
		
		private System.Nullable<int> _THANHTIEN;
		
		private EntityRef<HOADONPH> _HOADONPH;
		
		private EntityRef<PHONG> _PHONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHDChanging(string value);
    partial void OnMAHDChanged();
    partial void OnMAPHChanging(string value);
    partial void OnMAPHChanged();
    partial void OnTENKHChanging(string value);
    partial void OnTENKHChanged();
    partial void OnTONGTIENDVChanging(System.Nullable<int> value);
    partial void OnTONGTIENDVChanged();
    partial void OnTONGTIENPHONGChanging(System.Nullable<int> value);
    partial void OnTONGTIENPHONGChanged();
    partial void OnTHANHTIENChanging(System.Nullable<int> value);
    partial void OnTHANHTIENChanged();
    #endregion
		
		public CHITIETHD()
		{
			this._HOADONPH = default(EntityRef<HOADONPH>);
			this._PHONG = default(EntityRef<PHONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHD", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHD
		{
			get
			{
				return this._MAHD;
			}
			set
			{
				if ((this._MAHD != value))
				{
					if (this._HOADONPH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHDChanging(value);
					this.SendPropertyChanging();
					this._MAHD = value;
					this.SendPropertyChanged("MAHD");
					this.OnMAHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPH", DbType="Char(10)")]
		public string MAPH
		{
			get
			{
				return this._MAPH;
			}
			set
			{
				if ((this._MAPH != value))
				{
					if (this._PHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHChanging(value);
					this.SendPropertyChanging();
					this._MAPH = value;
					this.SendPropertyChanged("MAPH");
					this.OnMAPHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKH", DbType="NVarChar(50)")]
		public string TENKH
		{
			get
			{
				return this._TENKH;
			}
			set
			{
				if ((this._TENKH != value))
				{
					this.OnTENKHChanging(value);
					this.SendPropertyChanging();
					this._TENKH = value;
					this.SendPropertyChanged("TENKH");
					this.OnTENKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGTIENDV", DbType="Int")]
		public System.Nullable<int> TONGTIENDV
		{
			get
			{
				return this._TONGTIENDV;
			}
			set
			{
				if ((this._TONGTIENDV != value))
				{
					this.OnTONGTIENDVChanging(value);
					this.SendPropertyChanging();
					this._TONGTIENDV = value;
					this.SendPropertyChanged("TONGTIENDV");
					this.OnTONGTIENDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGTIENPHONG", DbType="Int")]
		public System.Nullable<int> TONGTIENPHONG
		{
			get
			{
				return this._TONGTIENPHONG;
			}
			set
			{
				if ((this._TONGTIENPHONG != value))
				{
					this.OnTONGTIENPHONGChanging(value);
					this.SendPropertyChanging();
					this._TONGTIENPHONG = value;
					this.SendPropertyChanged("TONGTIENPHONG");
					this.OnTONGTIENPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THANHTIEN", DbType="Int")]
		public System.Nullable<int> THANHTIEN
		{
			get
			{
				return this._THANHTIEN;
			}
			set
			{
				if ((this._THANHTIEN != value))
				{
					this.OnTHANHTIENChanging(value);
					this.SendPropertyChanging();
					this._THANHTIEN = value;
					this.SendPropertyChanged("THANHTIEN");
					this.OnTHANHTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADONPH_CHITIETHD", Storage="_HOADONPH", ThisKey="MAHD", OtherKey="MAHD", IsForeignKey=true)]
		public HOADONPH HOADONPH
		{
			get
			{
				return this._HOADONPH.Entity;
			}
			set
			{
				HOADONPH previousValue = this._HOADONPH.Entity;
				if (((previousValue != value) 
							|| (this._HOADONPH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOADONPH.Entity = null;
						previousValue.CHITIETHD = null;
					}
					this._HOADONPH.Entity = value;
					if ((value != null))
					{
						value.CHITIETHD = this;
						this._MAHD = value.MAHD;
					}
					else
					{
						this._MAHD = default(string);
					}
					this.SendPropertyChanged("HOADONPH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_CHITIETHD", Storage="_PHONG", ThisKey="MAPH", OtherKey="MAPHONG", IsForeignKey=true)]
		public PHONG PHONG
		{
			get
			{
				return this._PHONG.Entity;
			}
			set
			{
				PHONG previousValue = this._PHONG.Entity;
				if (((previousValue != value) 
							|| (this._PHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONG.Entity = null;
						previousValue.CHITIETHDs.Remove(this);
					}
					this._PHONG.Entity = value;
					if ((value != null))
					{
						value.CHITIETHDs.Add(this);
						this._MAPH = value.MAPHONG;
					}
					else
					{
						this._MAPH = default(string);
					}
					this.SendPropertyChanged("PHONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
